name: macOS CI
on:
  pull_request:
  push:
  schedule:
    - cron: '0 0 * * 0'
jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip macos ci]')"
    runs-on: macos-12
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
      INSPIRCD_DEBUG: 3
      INSPIRCD_VERBOSE: 1
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew update || true
          for PACKAGE in pkg-config argon2 gnutls libmaxminddb libpq libpsl mbedtls mysql-client openssl openldap pcre2 re2 rapidjson sqlite
          do
            brew install $PACKAGE || brew upgrade $PACKAGE

            BREW_PREFIX=$(brew --prefix $PACKAGE)
            if [ -d "$BREW_PREFIX/bin" ]
            then
              export PATH="$PATH:$BREW_PREFIX/bin"
            fi
            if [ -d "$BREW_PREFIX/lib/pkgconfig" ]
            then
              export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$BREW_PREFIX/lib/pkgconfig"
            fi
          done
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV

      # TODO: remove this when https://github.com/Homebrew/homebrew-core/issues/130258 is fixed.
      - name: Work around Homebrew MySQL being broken
        run: |
          brew install zlib
          ln -sv $(brew --prefix zlib)/lib/libz.dylib $(brew --prefix)/lib/libzlib.dylib

      - name: Run configure
        run: |
          ./configure --enable-extras "argon2 geo_maxmind ldap log_json log_syslog mysql pgsql regex_pcre regex_posix regex_re2 sqlite3 ssl_gnutls ssl_mbedtls ssl_openssl sslrehashsignal"
          ./configure --development --disable-auto-extras --socketengine ${{ matrix.socketengine }}

      - name: Build core
        run: |
          INSPIRCD_TARGET=inspircd make --jobs $(($(sysctl -n hw.activecpu) + 1))

      - name: Build core modules
        run: |
          INSPIRCD_TARGET=coremods make --jobs $(($(sysctl -n hw.activecpu) + 1))

      - name: Build modules
        run: |
          INSPIRCD_TARGET=modules make --jobs $(($(sysctl -n hw.activecpu) + 1))

      - name: Install
        run: |
          make install

      - name: Run
        run: |
          touch ${{ github.workspace }}/run/conf/inspircd.conf
          ${{ github.workspace }}/run/inspircd start
    strategy:
      fail-fast: false
      matrix:
        socketengine:
          - kqueue
          - poll
          - select
